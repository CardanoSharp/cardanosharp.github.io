"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[236],{3905:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>g});var o=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,o,i=function(e,n){if(null==e)return{};var r,o,i={},t=Object.keys(e);for(o=0;o<t.length;o++)r=t[o],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)r=t[o],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var m=o.createContext({}),c=function(e){var n=o.useContext(m),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},l=function(e){var n=c(e.components);return o.createElement(m.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var r=e.components,i=e.mdxType,t=e.originalType,m=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=c(r),u=i,g=d["".concat(m,".").concat(u)]||d[u]||p[u]||t;return r?o.createElement(g,s(s({ref:n},l),{},{components:r})):o.createElement(g,s({ref:n},l))}));function g(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var t=r.length,s=new Array(t);s[0]=u;var a={};for(var m in n)hasOwnProperty.call(n,m)&&(a[m]=n[m]);a.originalType=e,a[d]="string"==typeof e?e:i,s[1]=a;for(var c=2;c<t;c++)s[c]=r[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7943:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var o=r(7462),i=(r(7294),r(3905));const t={sidebar_position:2},s="Mnemonics",a={unversionedId:"mnemonic",id:"mnemonic",title:"Mnemonics",description:"In this section, we're going to review how to:",source:"@site/docs/mnemonic.md",sourceDirName:".",slug:"/mnemonic",permalink:"/docs/mnemonic",draft:!1,editUrl:"https://github.com/CardanoSharp/website/blob/main/docs/mnemonic.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Derive and Create Keys",permalink:"/docs/keys"}},m={},c=[{value:"Generate a New Mnemonic",id:"generate-a-new-mnemonic",level:2},{value:"Word Counts",id:"word-counts",level:2},{value:"Languages",id:"languages",level:2},{value:"Restore a Mnemonic",id:"restore-a-mnemonic",level:2},{value:"Restoring with Different Languages",id:"restoring-with-different-languages",level:2}],l={toc:c};function d(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,o.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mnemonics"},"Mnemonics"),(0,i.kt)("p",null,"In this section, we're going to review how to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Generate a New Mnemonic"),(0,i.kt)("li",{parentName:"ul"},"Restore a Mnemonic")),(0,i.kt)("h2",{id:"generate-a-new-mnemonic"},"Generate a New Mnemonic"),(0,i.kt)("p",null,"Lets start simple. Here were just going to generate a new mnemonic."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using CardanoSharp.Wallet;\nusing CardanoSharp.Wallet.Words;\nusing CardanoSharp.Wallet.Enums;\nusing CardanoSharp.Wallet.Extensions;\nusing CardanoSharp.Wallet.Models.Keys;\n\nIMnemonicService mnemonicService = new MnemonicService();\nMnemonic mnemonic = mnemonicService.Generate(24);\nConsole.WriteLine($"Words: {mnemonic.Words}");\nConsole.WriteLine($"Entropy: {mnemonic.Entropy.ToStringHex()}");\n')),(0,i.kt)("h2",{id:"word-counts"},"Word Counts"),(0,i.kt)("p",null,"In the first mnemonic example, we generated a 24 word Mnemonic. This is just 1 of 6 different lengths you can generate"),(0,i.kt)("p",null,"Word Counts Available: 9, 12, 15, 18, 21, 24"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Mnemonic mnemonic9 = mnemonicService.Generate(9);\nConsole.WriteLine($"9 Words: {mnemonic9.Words}");\n\nMnemonic mnemonic12 = mnemonicService.Generate(12);\nConsole.WriteLine($"12 Words: {mnemonic12.Words}");\n\nMnemonic mnemonic15 = mnemonicService.Generate(15);\nConsole.WriteLine($"15 Words: {mnemonic15.Words}");\n\nMnemonic mnemonic18 = mnemonicService.Generate(18);\nConsole.WriteLine($"18 Words: {mnemonic18.Words}");\n\nMnemonic mnemonic21 = mnemonicService.Generate(21);\nConsole.WriteLine($"21 Words: {mnemonic21.Words}");\n\nMnemonic mnemonic24 = mnemonicService.Generate(24);\nConsole.WriteLine($"24 Words: {mnemonic24.Words}");\n')),(0,i.kt)("h2",{id:"languages"},"Languages"),(0,i.kt)("p",null,"By default, the mnemonic service will generate mnemonics using the English lanugage. You can override the language using our ",(0,i.kt)("inlineCode",{parentName:"p"},"WordList")," enum. "),(0,i.kt)("p",null,"Here are the available lanugages: (English, ChineseSimplified, ChineseTraditional, French, Italian, Japanese, Korean, Spanish, Czech, Portuguese, German)"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Please Note: German was translated in house. If an officially supported German version comes available we will add it as German2")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Mnemonic mnemonicEnglish = mnemonicService.Generate(12, WordLists.English);\nConsole.WriteLine($"English Words: {mnemonicEnglish.Words}");\n\nMnemonic mnemonicChineseSimplified = mnemonicService.Generate(12, WordLists.ChineseSimplified);\nConsole.WriteLine($"Chinese Simplified Words: {mnemonicChineseSimplified.Words}");\n\nMnemonic mnemonicChineseTraditional = mnemonicService.Generate(12, WordLists.ChineseTraditional);\nConsole.WriteLine($"Chinese Traditional Words: {mnemonicChineseTraditional.Words}");\n\nMnemonic mnemonicFrench = mnemonicService.Generate(12, WordLists.French);\nConsole.WriteLine($"French Words: {mnemonicFrench.Words}");\n\nMnemonic mnemonicItalian = mnemonicService.Generate(12, WordLists.Italian);\nConsole.WriteLine($"Italian Words: {mnemonicItalian.Words}");\n\nMnemonic mnemonicJapanese = mnemonicService.Generate(12, WordLists.Japanese);\nConsole.WriteLine($"Japanese Words: {mnemonicJapanese.Words}");\n\nMnemonic mnemonicKorean = mnemonicService.Generate(12, WordLists.Korean);\nConsole.WriteLine($"Korean Words: {mnemonicKorean.Words}");\n\nMnemonic mnemonicSpanish = mnemonicService.Generate(12, WordLists.Spanish);\nConsole.WriteLine($"Spanish Words: {mnemonicSpanish.Words}");\n\nMnemonic mnemonicCzech = mnemonicService.Generate(12, WordLists.Czech);\nConsole.WriteLine($"Czech Words: {mnemonicCzech.Words}");\n\nMnemonic mnemonicPortuguese = mnemonicService.Generate(12, WordLists.Portuguese);\nConsole.WriteLine($"Portuguese Words: {mnemonicPortuguese.Words}");\n\nMnemonic mnemonicGerman = mnemonicService.Generate(12, WordLists.German);\nConsole.WriteLine($"German Words: {mnemonicGerman.Words}");\n')),(0,i.kt)("h2",{id:"restore-a-mnemonic"},"Restore a Mnemonic"),(0,i.kt)("p",null,"Now that we have reviewed how to generate a new mnemonic, lets go over how to restore an existing mnemonic."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Mnemonic restored = mnemonicService.Restore("episode around subway accuse confirm then disease stuff upgrade select barrel action priority carry silk awesome ability simple pupil frost run isolate behave fringe");\nConsole.WriteLine($"Words: {restored.Words}");\nConsole.WriteLine($"Entropy: {restored.Entropy.ToStringHex()}");\n')),(0,i.kt)("h2",{id:"restoring-with-different-languages"},"Restoring with Different Languages"),(0,i.kt)("p",null,"Again by default, we assume the language is english, but you can restore any mnemonic from the support lanugages listed above."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'Mnemonic restoredEnglish = mnemonicService.Restore("where require game dumb office police ahead cousin detail orchard toss inject", WordLists.English);\nConsole.WriteLine($"English Words: {mnemonicEnglish.Words}");\nConsole.WriteLine($"English Entropy: {mnemonicEnglish.Entropy.ToStringHex()}");\n\nMnemonic restoredChineseSimplified = mnemonicService.Restore("\u515a \u671d \u8bc1 \u62d6 \u5409 \u6746 \u96d5 \u5398 \u8270 \u5fd8 \u90ae \u5427", WordLists.ChineseSimplified);\nConsole.WriteLine($"Chinese Simplified Words: {restoredChineseSimplified.Words}");\nConsole.WriteLine($"Chinese Simplified Entropy: {restoredChineseSimplified.Entropy.ToStringHex()}");\n\nMnemonic restoredChineseTraditional = mnemonicService.Restore("\u6eb6 \u63ed \u5bcc \u6028 \u6842 \u9ece \u80fd \u9e7c \u7247 \u5c11 \u71c3 \u682a", WordLists.ChineseTraditional);\nConsole.WriteLine($"Chinese Traditional Words: {restoredChineseTraditional.Words}");\nConsole.WriteLine($"Chinese Traditional Entropy: {restoredChineseTraditional.Entropy.ToStringHex()}");\n\nMnemonic restoredFrench = mnemonicService.Restore("mandater poirier cravate arte\u0301riel rigide cavalier coincer estrade crotale explorer menacer journal", WordLists.French);\nConsole.WriteLine($"French Words: {restoredFrench.Words}");\nConsole.WriteLine($"French Entropy: {restoredFrench.Entropy.ToStringHex()}");\n\nMnemonic restoredItalian = mnemonicService.Restore("nanometro intasato pimpante monile bilancia spronato ocra farinoso prudente zampogna statuto pensare", WordLists.Italian);\nConsole.WriteLine($"Italian Words: {restoredItalian.Words}");\nConsole.WriteLine($"Italian Entropy: {restoredItalian.Entropy.ToStringHex()}");\n\nMnemonic restoredJapanese = mnemonicService.Restore("\u304f\u3059\u308a\u3086\u3072\u3099 \u306d\u3093\u308c\u3044 \u3046\u308f\u304d \u3072\u307b\u3046 \u306f\u3042\u304f \u306a\u3044\u305b\u3093 \u304a\u3057\u3099\u3055\u3093 \u3066\u3093\u3075\u309a\u3089 \u3044\u3084\u3059 \u3059\u3082\u3046 \u3066\u3093\u3051\u3093 \u3075\u3057\u3099\u307f", WordLists.Japanese);\nConsole.WriteLine($"Japanese Words: {restoredJapanese.Words}");\nConsole.WriteLine($"Japanese Entropy: {restoredJapanese.Entropy.ToStringHex()}");\n\nMnemonic restoredKorean = mnemonicService.Restore("\u1107\u1169\u1105\u1161\u11b7 \u110c\u1169\u11bc\u110c\u1169\u11bc \u110b\u1174\u1102\u1169\u11ab \u1103\u1169\u110e\u1161\u11a8 \u110b\u1175\u11af\u110b\u116d\u110b\u1175\u11af \u1109\u1175\u11b7\u1105\u1175 \u110b\u1161\u110c\u1165\u110a\u1175 \u110b\u1167\u110c\u1175\u11a8\u110b\u116f\u11ab \u1110\u1173\u11a8\u1107\u1167\u11af \u110e\u1161\u11b7\u110c\u1169 \u1109\u1161\u11ab\u1100\u1175\u11af \u110b\u1167\u11af\u1106\u1162", WordLists.Korean);\nConsole.WriteLine($"Korean Words: {restoredKorean.Words}");\nConsole.WriteLine($"Korean Entropy: {restoredKorean.Entropy.ToStringHex()}");\n\nMnemonic restoredSpanish = mnemonicService.Restore("huida alzar nu\u0301cleo ola curso triste calor choque mapa hallar fra\u0301gil cierto", WordLists.Spanish);\nConsole.WriteLine($"Spanish Words: {restoredSpanish.Words}");\nConsole.WriteLine($"Spanish Entropy: {restoredSpanish.Entropy.ToStringHex()}");\n\nMnemonic restoredCzech = mnemonicService.Restore("popisek gramofon krkavec borec odpustit tenor ulita setina praporek golfista svalstvo kometa", WordLists.Czech);\nConsole.WriteLine($"Czech Words: {restoredCzech.Words}");\nConsole.WriteLine($"Czech Entropy: {restoredCzech.Entropy.ToStringHex()}");\n\nMnemonic restoredPortuguese = mnemonicService.Restore("bolo afluente cedilha vigente riacho reinado meteoro proibido admirar xerife feriado vitral", WordLists.Portuguese);\nConsole.WriteLine($"Portuguese Words: {restoredPortuguese.Words}");\nConsole.WriteLine($"Portuguese Entropy: {restoredPortuguese.Entropy.ToStringHex()}");\n\nMnemonic restoredGerman = mnemonicService.Restore("rost korn empfang wetter sperling allianz jung kiste abseits faust urlaub enkel", WordLists.German);\nConsole.WriteLine($"German Words: {restoredGerman.Words}");\nConsole.WriteLine($"German Entropy: {restoredGerman.Entropy.ToStringHex()}");\n')))}d.isMDXComponent=!0}}]);